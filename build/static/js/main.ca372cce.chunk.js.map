{"version":3,"sources":["pages/Login.js","pages/Input.js","pages/ProductionBoard.js","components/Navi.js","App.js","index.js"],"names":["useStyles","makeStyles","loginCon","display","justifyContent","marginTop","loginBtn","margin","textField","textAlign","Login","classes","Container","maxWidth","alignContent","alignItems","className","Grid","spacing","item","xs","InputLabel","id","startAdornment","InputAdornment","position","Button","Input","TextField","label","type","defaultValue","InputLabelProps","shrink","variant","required","createData","Job_Number","name","Part_Number","shift","Operator","PROD","RUN_HRS","DOWN_TIME","SU_TIME","AVG_RR","STD_RR","EFFICIENCY_75","PROD_GOAL_85","SHIFT_TOTAL","GRAND_TOTAL","QTY_LEFT","PO_QTY","rows","ProductionBoard","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","key","scope","Name","navCon","padding","navLink","color","fontSize","headerNav","Navbar","Typography","Tooltip","title","placement","IconButton","to","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca372cce.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles(() => ({\n    loginCon: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '25%',\n    },\n    loginBtn: {\n      margin:'auto',\n    },\n    textField: {\n      textAlign:'center',\n      marginTop:10,  \n    }\n  }))\n\nconst Login = () => {\n    const classes = useStyles()\n\n    return (\n        <Container maxWidth='md' alignContent='center' alignItems='center' className={classes.loginCon}>            \n            <Grid  spacing={10}>\n                <Grid item xs={12}>\n                    <InputLabel>Email</InputLabel>\n                    <Input id='email'\n                    startAdornment={\n                        <InputAdornment position='start'>\n                            <AccountCircle/>\n                        </InputAdornment>\n                    }></Input>\n                </Grid>\n                <Grid item xs={12}>\n                <InputLabel>Password</InputLabel>\n                <Input id='password'\n                    startAdornment={\n                        <InputAdornment position='start'>\n                            <VpnKeyIcon/>\n                        </InputAdornment>\n                    }></Input>\n                </Grid>\n                <Grid item xs={12}>\n                    <Button >\n                        Login\n                    </Button>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport 'date-fns';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles(() => ({\n    textField: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '2%',\n    },\n    loginBtn: {\n      margin:'auto',\n    },\n    \n  }))\n\n\nconst Input = () => {\n    /*  \n    inputs for\n    date, part number, , operator, daily quantity, hours run (based on 10 hour day, hours down, hours setup, running quantity, run rate)\n    \n    */\n    const classes = useStyles()\n\n    return (\n        <Grid  maxWidth='md' spacing={10}>\n            <Grid item>\n                <TextField\n                id=\"datetime\"\n                label=\"Date & Time\"\n                type=\"datetime-local\"\n                defaultValue=\"2017-05-24T10:30\"\n                className={classes.textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                variant=\"outlined\"\n                />\n            </Grid>\n            <Grid item>\n                <TextField\n                required\n                id=\"partNumber\"\n                label=\"Part Number\"\n                // defaultValue=\"0456S\"\n                variant=\"outlined\"\n                className={classes.textField}\n                />    \n            </Grid>\n            <Grid item>\n            <TextField\n                required\n                id=\"operatorName\"\n                label=\"Operator Name\"\n                // defaultValue=\"0456S\"\n                variant=\"outlined\"\n                className={classes.textField}\n                />    \n            </Grid>\n            <Grid item>\n            <TextField\n                required\n                id=\"dailyQty\"\n                label=\"Daily Qauntity\"\n                // defaultValue=\"0456S\"\n                variant=\"outlined\"\n                className={classes.textField}\n                />    \n            </Grid>\n            <Grid item>\n               {/*  *** based off 10 hour day logic *** */}\n            <TextField\n                required\n                id=\"hoursRun\"\n                label=\"Hours Run\"\n                // defaultValue=\"0456S\"\n                variant=\"outlined\"\n                className={classes.textField}\n                />    \n            </Grid>\n            <Grid item>\n            <TextField\n                required\n                id=\"hoursDown\"\n                label=\"Hours Down\"\n                // defaultValue=\"0456S\"\n                variant=\"outlined\"\n                className={classes.textField}\n                />    \n            </Grid>\n            <Grid item>\n            <TextField\n                required\n                id=\"hoursSetup\"\n                label=\"Hours Setup\"\n                // defaultValue=\"0456S\"\n                variant=\"outlined\"\n                className={classes.textField}\n                />    \n            </Grid>\n            <Grid item>\n            <TextField\n                required\n                id=\"runningQty\"\n                label=\"Running Quantity\"\n                // defaultValue=\"0456S\"\n                variant=\"outlined\"\n                className={classes.textField}\n                />    \n            </Grid>\n            <Grid item>\n            <TextField\n                required\n                id=\"runningRate\"\n                label=\"Running Rate\"\n                // defaultValue=\"0456S\"\n                variant=\"outlined\"\n                className={classes.textField}\n                /> \n            </Grid>\n            <Grid item>\n                <Button>\n                    Submit\n                </Button>\n            </Grid>\n  \n        </Grid>\n    );\n}\n\nexport default Input;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n// import { makeStyles } from '@material-ui/core/styles';\n\n\n// const StyledTableRow = makeStyles(() => ({\n//     mixedRows: {\n//         '&:nth-of-type(odd)': {\n//             backgroundColor: 'black',\n//           },      \n//     },    \n//   }))(TableRow)\n\n\n  function createData(Job_Number, name, Part_Number, shift, Operator, PROD, RUN_HRS,DOWN_TIME, SU_TIME, AVG_RR,STD_RR,EFFICIENCY_75,PROD_GOAL_85, SHIFT_TOTAL, GRAND_TOTAL, QTY_LEFT, PO_QTY){\n      return {Job_Number, name, Part_Number, shift, Operator, PROD, RUN_HRS,DOWN_TIME, SU_TIME, AVG_RR,STD_RR,EFFICIENCY_75,PROD_GOAL_85, SHIFT_TOTAL, GRAND_TOTAL, QTY_LEFT, PO_QTY};\n  }\n\n  const rows = [\n      createData(30,'ACME #2 (8)', '1618vs', 1, 'Luke GR', 1170, 9,1,0,130,125,'104%','94%', 9784, 10952, 9048, 20000),\n      createData(30,'ACME #2 (8)', '1618vs', 1, 'Luke GR', 1170, 9,1,0,130,125,'104%','94%', 9784, 10952, 9048, 20000),\n      createData(30,'ACME #2 (8)', '1618vs', 1, 'Luke GR', 1170, 9,1,0,130,125,'104%','94%', 9784, 10952, 9048, 20000),\n      createData(30,'ACME #2 (8)', '1618vs', 1, 'Luke GR', 1170, 9,1,0,130,125,'104%','94%', 9784, 10952, 9048, 20000),\n      createData(30,'ACME #2 (8)', '1618vs', 1, 'Luke GR', 1170, 9,1,0,130,125,'104%','94%', 9784, 10952, 9048, 20000),\n      createData(30,'ACME #2 (8)', '1618vs', 1, 'Luke GR', 1170, 9,1,0,130,125,'104%','94%', 9784, 10952, 9048, 20000)\n\n  ]\nconst ProductionBoard = () => {\n    return (\n        <div>\n            <TableContainer component={Paper}>\n                <Table  aria-label=\"customized table\">\n                    <TableHead>\n                    <TableRow>\n                        <TableCell>Job_Number</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Part_Number</TableCell>\n                        <TableCell>shift</TableCell>\n                        <TableCell>Operator</TableCell>\n                        <TableCell>PROD</TableCell>\n                        <TableCell>RUN_HRS</TableCell>\n                        <TableCell>DOWN_TIME</TableCell>\n                        <TableCell>SU_TIME</TableCell>\n                        <TableCell>AVG_RR</TableCell>\n                        <TableCell>STD_RR</TableCell>\n                        <TableCell>EFFICIENCY_75</TableCell>\n                        <TableCell>PROD_GOAL_85</TableCell>\n                        <TableCell>SHIFT_TOTAL</TableCell>\n                        <TableCell>GRAND_TOTAL</TableCell>\n                        <TableCell>QTY_LEFT</TableCell>\n                        <TableCell>PO_QTY</TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                    <TableRow key={row.name}>\n                        <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                        </TableCell>  \n                        <TableCell>{row.Job_Number}</TableCell>\n                        <TableCell>{row.Name}</TableCell>\n                        <TableCell>{row.Part_Number}</TableCell>\n                        <TableCell>{row.shift}</TableCell>\n                        <TableCell>{row.Operator}</TableCell>\n                        <TableCell>{row.PROD}</TableCell>\n                        <TableCell>{row.RUN_HRS}</TableCell>\n                        <TableCell>{row.DOWN_TIME}</TableCell>\n                        <TableCell>{row.SU_TIME}</TableCell>\n                        <TableCell>{row.AVG_RR}</TableCell>\n                        <TableCell>{row.STD_RR}</TableCell>\n                        <TableCell>{row.EFFICIENCY_75}</TableCell>\n                        <TableCell>{row.PROD_GOAL_85}</TableCell>\n                        <TableCell>{row.SHIFT_TOTAL}</TableCell>\n                        <TableCell>{row.GRAND_TOTAL}</TableCell>\n                        <TableCell>{row.QTY_LEFT}</TableCell>\n                        <TableCell>{row.PO_QTY}</TableCell>\n                    </TableRow> \n                    ))}\n                </TableBody>\n                </Table>\n            </TableContainer>\n\n        </div>\n    );\n}\n\nexport default ProductionBoard;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  navCon: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '32px 72px',\n    \n  },\n  navLink: {\n    color: 'black',\n    fontSize: 30,\n  },\n  headerNav: {\n    textAlign:'center',\n    fontSize:35,\n  }\n}))\n\nconst Navbar = () => {\n  const classes = useStyles()\n\n    return (\n    <div>\n      <Typography className={classes.headerNav}>\n        Production Logging System\n      </Typography>\n      <Container maxWidth='md' className={classes.navCon}>            \n            <Tooltip title=\"Login\" placement=\"bottom\">\n              <IconButton >\n                <Link to=\"/\">\n                  <VpnKeyIcon className={classes.navLink}/>\n                </Link>\n              </IconButton>\n            </Tooltip>  \n\n            <Tooltip title=\"Data Entry\" placement=\"bottom\">\n              <IconButton >\n                <Link to=\"/input\">\n                  <CloudUploadIcon className={classes.navLink}/>\n                </Link>\n              </IconButton>\n            </Tooltip>  \n\n            <Tooltip title=\"Production Board\" placement=\"bottom\">\n              <IconButton >\n                <Link to=\"/Board\">\n                  <AssignmentIcon className={classes.navLink}/>\n                </Link>\n              </IconButton>\n            </Tooltip>  \n\n            <Tooltip title=\"Reporting\" placement=\"bottom\">\n              <IconButton >\n                <Link to=\"/\">\n                  <StorageIcon className={classes.navLink}/>\n                </Link>\n              </IconButton>\n            </Tooltip>     \n      </Container>   \n    </div>\n       \n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,  \n} from \"react-router-dom\";\nimport Login from './pages/Login';\nimport InputPage from './pages/Input';\nimport ProductionBoard from './pages/ProductionBoard';\nimport Navbar from './components/Navi'\n\nfunction App() {\n  return (\n    <Router>      \n      <div>\n        <Navbar/>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/Board\">\n            <ProductionBoard />\n          </Route>\n          <Route path=\"/input\">\n            <InputPage />\n          </Route>\n          <Route path=\"/\">\n            <Login />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n<App />,\ndocument.getElementById('root')\n);"],"sourceRoot":""}